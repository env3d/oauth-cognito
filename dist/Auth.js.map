{"version":3,"sources":["Auth.js"],"names":["STORAGE","AUTH_TOKEN","PKCE_VERIFIER","Auth","baseUrl","clientId","onLogin","loadFromStorage","refreshVerifier","redirect_uri","window","location","origin","pathname","addEventListener","params","URLSearchParams","search","code","get","call","history","pushState","hash","token","JSON","parse","localStorage","getItem","randomString","verifier","base64URLEncode","console","warn","setItem","challenge","sha256","Promise","resolve","reject","authorize","then","t","catch","e","finally","id_token","timeToExpiry","refresh","atob","split","exp","Date","getTime","tokenEndpoint","refresh_token","grant_type","log","body","join","fetch","method","headers","res","json","error","Object","assign","stringify","crypto","getRandomValues","String","fromCharCode","apply","Uint8Array","map","b","randomBytes","loginUrl","href","str","toString","replace","ascii","rightRotate","value","amount","mathPow","Math","pow","maxWord","lengthProperty","i","j","words","asciiBitLength","h","k","primeCounter","isComposite","candidate","charCodeAt","w","slice","oldHash","i2","w15","w2","a","temp1","temp2","concat","result","push","btoa","from","module","exports"],"mappings":"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","file":"Auth.js","sourceRoot":"..","sourcesContent":["const STORAGE = {\n  AUTH_TOKEN: 'auth_token',\n  PKCE_VERIFIER: 'auth_verifier'\n};\n\nexport default class Auth {\n  \n  constructor({ baseUrl, clientId, onLogin }) {\n\n    // this.token is now filled, either with an empty object or with tokens\n    this.loadFromStorage();\n    // get the verifier from storage so we can send challenge\n    this.refreshVerifier();\n    \n    this.baseUrl = baseUrl || 'https://operatoroverload.auth.us-west-2.amazoncognito.com';    \n    this.clientId = clientId || '47ile8emo7m8flnhjfuc5aa9i0';    \n    this.redirect_uri = `${window.location.origin}${window.location.pathname}`;\n    \n    window.addEventListener('load', () => {\n      let params = new window.URLSearchParams(window.location.search);\n      this.code = params.get('code');\n      if (this.code && onLogin) onLogin.call(this);\n\n      if (this.code) {\n        window.history.pushState(\n          {}, null, `${window.location.origin}${window.location.pathname}${window.location.hash}`\n        );\n      }\n      \n    });\n  }\n\n  loadFromStorage() {\n    this.token = JSON.parse(window.localStorage.getItem(STORAGE.AUTH_TOKEN)) || {};\n    return this.token;\n  }\n  \n  refreshVerifier( randomString = null ) {\n    // If caller provider randomString, replace the verifier,\n    // otherwise just load it from storage\n    this.verifier = randomString ? base64URLEncode(randomString) :\n      window.localStorage.getItem(STORAGE.PKCE_VERIFIER);\n\n    if (!this.verifier) {\n      console.warn(\"cannot generate or load verifier string, probably first time using this app.  Welcome!\");\n      // prime the store some something\n      this.verifier = 'some random string';\n    }\n    \n    window.localStorage.setItem(STORAGE.PKCE_VERIFIER, this.verifier);\n    \n    this.challenge = base64URLEncode(sha256(this.verifier));\n  }\n  \n  /**\n   * We get a token - only interested in the id_token\n   */\n  getToken() {\n    return new Promise( (resolve, reject) => {\n      if (this.code) {\n        this.authorize()\n          .then( t => resolve(t) )\n          .catch( e => reject(e) )\n          .finally( () => this.code = null );\n      } else if (this.token && this.token.id_token) {\n        if (this.timeToExpiry() > 3570) {\n          resolve(this.token.id_token);\n        } else {\n          this.refresh().then( t => resolve(t) ).catch( e => reject(e) );\n        }\n      } else {\n        reject(\"cannot refresh and not auth code, should start login flow\");\n      }\n    });\n  }\n\n  timeToExpiry(id_token) {\n    id_token = id_token || this.token.id_token;\n    return JSON.parse( window.atob(id_token.split('.')[1]) ).exp - ((new Date()).getTime() / 1000);\n  }\n\n  refresh() {\n    return this.tokenEndpoint( { refresh_token: this.token.refresh_token } );\n  }\n  \n  authorize() {\n    return this.tokenEndpoint( { code: this.code} );\n  }\n  \n  tokenEndpoint( { code: code, refresh_token: refresh_token } ) {\n\n    let grant_type = refresh_token ? 'refresh_token' : 'authorization_code';    \n    console.log(`getting ${grant_type}`);\n    \n    let body = [\n      `client_id=${this.clientId}`,\n      `grant_type=${grant_type}`,      \n      `redirect_uri=${this.redirect_uri}`,\n      refresh_token ? `refresh_token=${refresh_token}` : '',\n      code ? `code=${code}` : '',\n      `code_verifier=${this.verifier}`\n    ].join('&');\n    \n    return new Promise( (resolve, reject) => {\n      window.fetch(`${this.baseUrl}/oauth2/token`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body\n      }).then( res => {\n        return res.json();\n      }).then( json => {\n        console.log(json);\n        if (json.error) {\n          reject( json );\n        } else {        \n          // save the token in storage and in the object\n          Object.assign(this.token, json);\n          window.localStorage.setItem(STORAGE.AUTH_TOKEN, JSON.stringify(this.token));\n          resolve( json.id_token );\n        }\n      });      \n    });\n  }\n  \n  login() {    \n    let randomString = crypto.getRandomValues ? String.fromCharCode.apply(\n      null, crypto.getRandomValues(new Uint8Array(10)).map( b => b%26 + 97)\n    ) : crypto.randomBytes(32);\n    \n    this.refreshVerifier(randomString);\n    \n    let loginUrl = [\n      `${this.baseUrl}/login?client_id=${this.clientId}`,\n\t    `response_type=code`,\n\t    `scope=email+openid+profile`,\n      `code_challenge=${this.challenge}`,\n      `code_challenge_method=S256`,\n\t    `redirect_uri=${this.redirect_uri}`\n    ].join('&');\n\n    window.location.href = loginUrl;\n  };    \n}\n\n// Support functions\nfunction base64URLEncode(str) {\n    return str.toString('base64')\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=/g, '');\n}\n\n// from https://geraintluff.github.io/sha256/\n// but modified to output base64\nfunction sha256(ascii) {\n\tfunction rightRotate(value, amount) {\n\t\treturn (value>>>amount) | (value<<(32 - amount));\n\t};\n\t\n\tvar mathPow = Math.pow;\n\tvar maxWord = mathPow(2, 32);\n\tvar lengthProperty = 'length'\n\tvar i, j; // Used as a counter across the whole file\n\n\tvar words = [];\n\tvar asciiBitLength = ascii[lengthProperty]*8;\n\t\n\t//* caching results is optional - remove/add slash from front of this line to toggle\n\t// Initial hash value: first 32 bits of the fractional parts of the square roots of the first 8 primes\n\t// (we actually calculate the first 64, but extra values are just ignored)\n\tvar hash = sha256.h = sha256.h || [];\n\t// Round constants: first 32 bits of the fractional parts of the cube roots of the first 64 primes\n\tvar k = sha256.k = sha256.k || [];\n\tvar primeCounter = k[lengthProperty];\n\t/*/\n\tvar hash = [], k = [];\n\tvar primeCounter = 0;\n\t//*/\n\n\tvar isComposite = {};\n\tfor (var candidate = 2; primeCounter < 64; candidate++) {\n\t\tif (!isComposite[candidate]) {\n\t\t\tfor (i = 0; i < 313; i += candidate) {\n\t\t\t\tisComposite[i] = candidate;\n\t\t\t}\n\t\t\thash[primeCounter] = (mathPow(candidate, .5)*maxWord)|0;\n\t\t\tk[primeCounter++] = (mathPow(candidate, 1/3)*maxWord)|0;\n\t\t}\n\t}\n\t\n\tascii += '\\x80' // Append Ƈ' bit (plus zero padding)\n\twhile (ascii[lengthProperty]%64 - 56) ascii += '\\x00' // More zero padding\n\tfor (i = 0; i < ascii[lengthProperty]; i++) {\n\t\tj = ascii.charCodeAt(i);\n\t\tif (j>>8) return; // ASCII check: only accept characters in range 0-255\n\t\twords[i>>2] |= j << ((3 - i)%4)*8;\n\t}\n\twords[words[lengthProperty]] = ((asciiBitLength/maxWord)|0);\n\twords[words[lengthProperty]] = (asciiBitLength)\n\t\n\t// process each chunk\n\tfor (j = 0; j < words[lengthProperty];) {\n\t\tvar w = words.slice(j, j += 16); // The message is expanded into 64 words as part of the iteration\n\t\tvar oldHash = hash;\n\t\t// This is now the undefinedworking hash\", often labelled as variables a...g\n\t\t// (we have to truncate as well, otherwise extra entries at the end accumulate\n\t\thash = hash.slice(0, 8);\n\t\t\n\t\tfor (i = 0; i < 64; i++) {\n\t\t\tvar i2 = i + j;\n\t\t\t// Expand the message into 64 words\n\t\t\t// Used below if \n\t\t\tvar w15 = w[i - 15], w2 = w[i - 2];\n\n\t\t\t// Iterate\n\t\t\tvar a = hash[0], e = hash[4];\n\t\t\tvar temp1 = hash[7]\n\t\t\t\t+ (rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25)) // S1\n\t\t\t\t+ ((e&hash[5])^((~e)&hash[6])) // ch\n\t\t\t\t+ k[i]\n\t\t\t\t// Expand the message schedule if needed\n\t\t\t\t+ (w[i] = (i < 16) ? w[i] : (\n\t\t\t\t\t\tw[i - 16]\n\t\t\t\t\t\t+ (rightRotate(w15, 7) ^ rightRotate(w15, 18) ^ (w15>>>3)) // s0\n\t\t\t\t\t\t+ w[i - 7]\n\t\t\t\t\t\t+ (rightRotate(w2, 17) ^ rightRotate(w2, 19) ^ (w2>>>10)) // s1\n\t\t\t\t\t)|0\n\t\t\t\t);\n\t\t\t// This is only used once, so *could* be moved below, but it only saves 4 bytes and makes things unreadble\n\t\t\tvar temp2 = (rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22)) // S0\n\t\t\t\t+ ((a&hash[1])^(a&hash[2])^(hash[1]&hash[2])); // maj\n\t\t\t\n\t\t\thash = [(temp1 + temp2)|0].concat(hash); // We don't bother trimming off the extra ones, they're harmless as long as we're truncating when we do the slice()\n\t\t\thash[4] = (hash[4] + temp1)|0;\n\t\t}\n\t\t\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\thash[i] = (hash[i] + oldHash[i])|0;\n\t\t}\n\t}\n  \n\tvar result = [];\n\tfor (i = 0; i < 8; i++) {\n\t\tfor (j = 3; j + 1; j--) {\n\t\t\tvar b = (hash[i]>>(j*8))&255;\n\t\t\t//result += ((b < 16) ? 0 : '') + b.toString(16);\n      result.push(b);\n\t\t}\n\t}\n  //return result;  \n\t//return Uint8Array.from(result);\n  \n  return btoa(String.fromCharCode.apply(null, Uint8Array.from(result)));\n};\n\n// Need to use commonjs module export for UMD\n// https://github.com/parcel-bundler/parcel/issues/766\n//\nmodule.exports = Auth;\n"]}